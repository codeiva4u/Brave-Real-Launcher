name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run compatibility and type checks
        run: |
          echo "üìù Running compatibility and type checks..."
          npm run test:compatibility
          npm run test:types

      - name: Build project
        run: npm run build

      - name: Test exports
        run: npm run test:exports

      - name: Test browser detection
        continue-on-error: true
        run: |
          echo "ü¶Å Testing browser detection..."
          npm run test:detection

      - name: Setup Xvfb (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb xdpyinfo

      - name: Test Xvfb functionality (Linux only)
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
        run: |
          echo "üêß Testing Xvfb functionality..."
          node -e "
            const { XvfbManager } = require('./dist/index.js');
            
            async function testXvfb() {
              const xvfb = new XvfbManager({ display: ':99' });
              try {
                await xvfb.start();
                console.log('‚úÖ Xvfb started successfully');
                await xvfb.stop();
                console.log('‚úÖ Xvfb stopped successfully');
              } catch (error) {
                console.log('‚ö†Ô∏è Xvfb test:', error.message);
              }
            }
            
            testXvfb();
          "

      - name: Test summary
        run: |
          echo "üéâ All tests completed for ${{ matrix.os }} with Node.js ${{ matrix.node-version }}"